/**
 * 
 */
package com.nyt.mpt.domain;

import java.util.Date;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.OrderBy;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;

import com.nyt.mpt.util.ChangeTrackedDomain;
import com.nyt.mpt.util.enums.LineItemProductTypeEnum;
import com.nyt.mpt.util.enums.PricingStatus;

/**
 * This <code>LineItem</code> class includes all the attributes related to
 * LineItem and their getter and setter. The attributes have mapping with
 * <code>MP_LINE_ITEMS</code> table in the AMPT database
 * 
 * @author Shishir.Srivastava
 */

@Entity
@Table(name = "MP_LINE_ITEMS")
@SuppressWarnings("serial")
public class LineItem extends ChangeTrackedDomain {

	private Long lineItemID;

	private Long sosLineItemID;

	private Long proposalId;

	private Package packageObj;

	private Long sosProductId;

	private Long sosProductClass;

	private Date startDate;

	private Date endDate;

	private String comments;

	private boolean active = true;

	private boolean partiallyCopiedUnbreakPackage = false;

	private String flight;

	private Double rate;

	private String priceType;

	private Long impressionTotal;

	private Long totalPossibleImpressions;

	private Double totalInvestment;

	private boolean richMediaCreative;

	private Set<LineItemTarget> geoTargetSet = new LinkedHashSet<LineItemTarget>();

	private int version;

	private ProposalVersion proposalVersion;

	private Double rateCardPrice;

	private String placementName;

	// private String segmentCode;

	private Double avails;

	private Double sov;

	private Long orderNumber;

	private Date availsPopulatedDate;

	private List<LineItemSalesTargetAssoc> lineItemSalesTargetAssocs;

	private Set<LineItemExceptions> lineItemExceptions = new LinkedHashSet<LineItemExceptions>();

	private int lineItemSequence;

	private String specType;

	private String productName;

	private String targetingString;

	private String priceCalSummary;

	private Double sor;

	private LineItemReservations reservation;

	private boolean ratex = false;

	private PricingStatus pricingStatus;

	private LineItemProductTypeEnum productType;
	
	private int viewabilityLevel;
	
	@Id
	@Column(name = "LINEITEM_ID")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "PROPOSAL_LINE_ITEM")
	@SequenceGenerator(name = "PROPOSAL_LINE_ITEM", sequenceName = "MP_LINEITEM_SEQ", allocationSize = 1)
	public Long getLineItemID() {
		return lineItemID;
	}

	public void setLineItemID(final Long lineItemID) {
		this.lineItemID = lineItemID;
	}

	@Column(name = "SOS_LINEITEM_ID")
	public Long getSosLineItemID() {
		return sosLineItemID;
	}

	public void setSosLineItemID(Long sosLineItemID) {
		this.sosLineItemID = sosLineItemID;
	}

	@Column(name = "SOS_PRODUCT_ID")
	public Long getSosProductId() {
		return sosProductId;
	}

	public void setSosProductId(final Long sosProductId) {
		this.sosProductId = sosProductId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "START_DATE")
	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(final Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "END_DATE")
	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(final Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "COMMENTS")
	public String getComments() {
		return comments;
	}

	public void setComments(final String comments) {
		this.comments = comments;
	}

	@Column(name = "IS_ACTIVE")
	public boolean isActive() {
		return active;
	}

	public void setActive(final boolean active) {
		this.active = active;
	}

	@Column(name = "PARTIALLY_COPIED_UNBREAK_PKG")
	public boolean isPartiallyCopiedUnbreakPackage() {
		return partiallyCopiedUnbreakPackage;
	}

	public void setPartiallyCopiedUnbreakPackage(final boolean partiallyCopiedUnbreakPackage) {
		this.partiallyCopiedUnbreakPackage = partiallyCopiedUnbreakPackage;
	}

	@Column(name = "FLIGHT")
	public String getFlight() {
		return flight;
	}

	public void setFlight(final String flight) {
		this.flight = flight;
	}

	@Column(name = "CPM")
	public Double getRate() {
		return rate;
	}

	public void setRate(final Double rate) {
		this.rate = rate;
	}

	@Column(name = "PRICE_TYPE")
	public String getPriceType() {
		return priceType;
	}

	public void setPriceType(final String priceType) {
		this.priceType = priceType;
	}

	@Column(name = "IMPRESSION_TOTAL")
	public Long getImpressionTotal() {
		return impressionTotal;
	}

	public void setImpressionTotal(final Long impressionTotal) {
		this.impressionTotal = impressionTotal;
	}

	@Column(name = "TOTAL_POSSIBLE_IMPRESSION")
	public Long getTotalPossibleImpressions() {
		return totalPossibleImpressions;
	}

	public void setTotalPossibleImpressions(final Long totalOfferdImpressions) {
		this.totalPossibleImpressions = totalOfferdImpressions;
	}

	@Column(name = "TOT_INVESTMENT")
	public Double getTotalInvestment() {
		return totalInvestment;
	}

	public void setTotalInvestment(final Double totalInvestment) {
		this.totalInvestment = totalInvestment;
	}

	@NotFound(action = NotFoundAction.IGNORE)
	@OneToMany(mappedBy = "proposalLineItem", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	@OrderBy(clause = "ID")
	public Set<LineItemTarget> getGeoTargetSet() {
		return geoTargetSet;
	}

	public void setGeoTargetSet(final Set<LineItemTarget> geoTargetSet) {
		this.geoTargetSet = geoTargetSet;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PACKAGE_ID")
	public Package getPackageObj() {
		return packageObj;
	}

	public void setPackageObj(final Package packageObj) {
		this.packageObj = packageObj;
	}

	@Column(name = "IS_RICHMEDIA_CREATIVES")
	public boolean isRichMediaCreative() {
		return richMediaCreative;
	}

	public void setRichMediaCreative(final boolean richMediaCreative) {
		this.richMediaCreative = richMediaCreative;
	}

	@Column(name = "SOS_PRODUCTCLASS_ID")
	public Long getSosProductClass() {
		return sosProductClass;
	}

	public void setSosProductClass(final Long sosProductClass) {
		this.sosProductClass = sosProductClass;
	}

	@Column(name = "VERSION")
	public int getVersion() {
		return version;
	}

	public void setVersion(final int version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROPOSAL_VERSION_ID", updatable = false)
	public ProposalVersion getProposalVersion() {
		return proposalVersion;
	}

	public void setProposalVersion(ProposalVersion proposalVersion) {
		this.proposalVersion = proposalVersion;
	}

	@Column(name = "PROPOSAL_ID")
	public Long getProposalId() {
		return proposalId;
	}

	public void setProposalId(final Long proposal_Id) {
		proposalId = proposal_Id;
	}

	@Column(name = "RATE_CARD_PRICE")
	public Double getRateCardPrice() {
		return (rateCardPrice == null) ? 0 : rateCardPrice;
	}

	public void setRateCardPrice(Double rateCardPrice) {
		this.rateCardPrice = rateCardPrice;
	}

	@Column(name = "PLACEMENT_NAME")
	public String getPlacementName() {
		return placementName;
	}

	public void setPlacementName(final String placementName) {
		this.placementName = placementName;
	}

	/*
	 * @Column(name = "SEGMENT_CODE") public String getSegmentCode() { return
	 * segmentCode; }
	 * 
	 * public void setSegmentCode(final String segmentCode) { this.segmentCode =
	 * segmentCode; }
	 */

	@Column(name = "AVAILS")
	public Double getAvails() {
		return avails;
	}

	public void setAvails(final Double avails) {
		this.avails = avails;
	}

	@Column(name = "sov")
	public Double getSov() {
		return sov;
	}

	public void setSov(final Double sov) {
		this.sov = sov;
	}

	@OneToMany(mappedBy = "lineitemId", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	public Set<LineItemExceptions> getLineItemExceptions() {
		return lineItemExceptions;
	}

	public void setLineItemExceptions(final Set<LineItemExceptions> lineItemExceptions) {
		this.lineItemExceptions = lineItemExceptions;
	}

	@Column(name = "ORDER_NUMBER")
	public Long getOrderNumber() {
		return orderNumber;
	}

	public void setOrderNumber(final Long orderNumber) {
		this.orderNumber = orderNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "AVAILS_POPULATED_DATE")
	public Date getAvailsPopulatedDate() {
		return availsPopulatedDate;
	}

	public void setAvailsPopulatedDate(final Date availsPopulatedDate) {
		this.availsPopulatedDate = availsPopulatedDate;
	}

	@OneToMany(mappedBy = "proposalLineItem", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	public List<LineItemSalesTargetAssoc> getLineItemSalesTargetAssocs() {
		return lineItemSalesTargetAssocs;
	}

	public void setLineItemSalesTargetAssocs(final List<LineItemSalesTargetAssoc> lineItemSalesTargetAssocs) {
		this.lineItemSalesTargetAssocs = lineItemSalesTargetAssocs;
	}

	@Column(name = "SEQ_NUMBER")
	public int getLineItemSequence() {
		return lineItemSequence;
	}

	public void setLineItemSequence(final int lineItemSequence) {
		this.lineItemSequence = lineItemSequence;
	}

	@Column(name = "SPEC_TYPE")
	public String getSpecType() {
		return specType;
	}

	public void setSpecType(final String specType) {
		this.specType = specType;
	}

	@Column(name = "PRODUCT_DISPLAY_NAME")
	public String getProductName() {
		return productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "TARGETING_STRING")
	public String getTargetingString() {
		return targetingString;
	}

	public void setTargetingString(String targetingString) {
		this.targetingString = targetingString;
	}

	@Column(name = "BASE_PRICE_CAL_DATA")
	@Type(type = "text")
	public String getPriceCalSummary() {
		return priceCalSummary;
	}

	public void setPriceCalSummary(String priceCalSummary) {
		this.priceCalSummary = priceCalSummary;
	}

	@Column(name = "SOR")
	public Double getSor() {
		return sor;
	}

	public void setSor(Double sor) {
		this.sor = sor;
	}

	@Fetch(FetchMode.JOIN)
	@OneToOne(mappedBy = "proposalLineItem", cascade = { CascadeType.ALL }, fetch = FetchType.LAZY)
	public LineItemReservations getReservation() {
		return reservation;
	}

	public void setReservation(LineItemReservations reservation) {
		this.reservation = reservation;
	}

	@Column(name = "IS_RATEX")
	public boolean isRatex() {
		return ratex;
	}

	public void setRatex(boolean ratex) {
		this.ratex = ratex;
	}

	@Column(name = "PRICING_STATUS", columnDefinition = "string")
	@Type(type = "com.nyt.mpt.domain.GenericEnumUserType", parameters = { @Parameter(name = "enumClass", value = "com.nyt.mpt.util.enums.PricingStatus"), @Parameter(name = "identifierMethod", value = "name"),
			@Parameter(name = "valueOfMethod", value = "findByName") })
	public PricingStatus getPricingStatus() {
		return pricingStatus;
	}

	public void setPricingStatus(PricingStatus pricingStatus) {
		this.pricingStatus = pricingStatus;
	}

	@Column(name = "PRODUCT_TYPE", columnDefinition = "string", nullable = false)
	@Type(type = "com.nyt.mpt.domain.GenericEnumUserType", parameters = { @Parameter(name = "enumClass", value = "com.nyt.mpt.util.enums.LineItemProductTypeEnum"), @Parameter(name = "identifierMethod", value = "name"),
			@Parameter(name = "valueOfMethod", value = "findByName") })
	public LineItemProductTypeEnum getProductType() {
		return productType;
	}

	public void setProductType(LineItemProductTypeEnum productType) {
		this.productType = productType;
	}

	@Column(name = "IS_VIEWABLE")
	public int getViewabilityLevel() {
		return viewabilityLevel;
	}

	public void setViewabilityLevel(int viewabilityLevel) {
		this.viewabilityLevel = viewabilityLevel;
	}
}
